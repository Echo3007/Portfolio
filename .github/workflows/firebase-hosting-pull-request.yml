# # This file was auto-generated by the Firebase CLI
# # https://github.com/firebase/firebase-tools

# name: Deploy to Firebase Hosting on PR
# on: pull_request
# permissions:
#   checks: write
#   contents: read
#   pull-requests: write
# jobs:
#   build_and_preview:
#     if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - run: npm install && next build
#       - uses: FirebaseExtended/action-hosting-deploy@v0
#         with:
#           repoToken: ${{ secrets.GITHUB_TOKEN }}
#           firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_ANGELA }}
#           projectId: portfolio-angela


# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          # Use '20' for the latest Node.js 20.x version
          # or '22' if your project is compatible and you want the latest.
          node-version: '20' 
          # You can add npm caching later for faster builds once this works:
          # cache: 'npm'
          # cache-dependency-path: './portfolio/package-lock.json' # Point to your project's lock file

      - name: Install System Dependencies for Native Modules
        # This step is crucial for libraries like sharp (which needs libvips)
        # and other native Node.js modules that require compilation tools.
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libvips-dev build-essential python3

      - name: Clean Install Node.js Dependencies
        # npm ci ensures a clean install based on package-lock.json
        # --loglevel verbose will give more detailed output for debugging
        run: |
          npm cache clean --force
          npm ci --loglevel verbose
        working-directory: ./portfolio/ # Important: run within your Next.js project directory

      # Optional: Uncomment this step ONLY IF the above 'npm ci' still fails
      # specifically for 'sharp' after installing system dependencies.
      # This forces sharp to install its specific Linux binary.
      # - name: Force Reinstall Sharp (if needed)
      #   run: npm install --os=linux --cpu=x64 sharp
      #   working-directory: ./portfolio/

      - name: Build Next.js Project
        run: npm run build
        working-directory: ./portfolio/ # Important: run within your Next.js project directory

      - name: Deploy to Firebase Hosting (Preview)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_ANGELA }}
          projectId: portfolio-angela
          # entryPoint is usually NOT needed for framework-aware Next.js deployments
          # If you were doing static export (output: 'export' in next.config.js),
          # you might use: entryPoint: ./portfolio/out
